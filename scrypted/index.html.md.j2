---
title: Scrypted API Reference

language_tabs: # must be one of https://git.io/vQNgJ
  - javascript
  - typescript

search: true
---
# Getting Started <br/>

## Creating An OnOff Device
```javascript
import axios from 'axios';

log.i('Hello World. This will create a virtual OnOff device.');

function Device() {
    this._isOn = false;
}

Device.prototype.isOn = function () {
    log.i('isOn was called!');
    return this._isOn;
};

Device.prototype.turnOff = function () {
    // set a breakpoint here.
    this._isOn = false;
    log.i('turnOff was called!');
};

Device.prototype.turnOn = async function () {
    // set a breakpoint here.
    log.i('turnOn was called!');

    // turnOn must return immediately, but it can trigger other things... 
    log.i('XMLHttpRequest is polyfilled by the Android host.');
    log.i('This allows the popular http library axios to work.');
    const ip = await axios.get('http://jsonip.com');
    log.i(`my ip: ${ip.data.ip}`);

    this._isOn = true;
};

export default = new Device();
```

1. Create a new Script under Plugins.
2. Set the type to Device.
3. Select/check the OnOff interface.
4. Save.
5. Click the Debug button.
6. Edit .vcode/settings.json and set the value of "scrypted.debugHost": "THIS.IS.MY.IP"
7. Launch Scrypted Debugger in VS Code.

# Types

{% for name, c in classes %}
## {{name}}

<%= partial "includes/scrypted/{{name}}.md.erb" %>

{{ c.description }}
{% if c.methods.length %}
{% endif %}
{% for method in c.methods %}
### {{ method.name }}
{{ method.type }} {{ method.name }}({{ methodArguments(method.arguments) | join(', ') }})

{% if method.arguments.length %}
Parameter | Type
--------- | ----
{% for param in method.arguments %}{{ param.name }} | <a href='#{{ param.type | lower }}'>{{ param.type }}</a>
{% endfor %}
{% endif %}

{{ method.description }}
{% endfor %}

{% if c.fields.length %}
Name      | Type
--------- | ----
{% for property in c.fields %}{{ property.name }} | {{ property.type }}
{% endfor %}
{% endif %}

{% endfor %}
