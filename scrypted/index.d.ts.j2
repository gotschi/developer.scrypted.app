export * from './types'
import { ScryptedStatic, ScryptedDeviceType, Logger, ColorRgb, ColorHsv, DeviceState, TemperatureUnit, LockState, ThermostatMode, Position  } from './types';

export class ScryptedDeviceBase implements DeviceState {
  constructor(nativeId?: string);
  nativeId: string;
  log: Logger;
  storage: Storage;
{%- for field in classes['DeviceState'].fields %}
  {% if field.description -%}
  /**
   * {{ field.description }}
   */
  {% endif -%}  {{ field.name }}?: {{ mapType(field) }};
{%- endfor %}
}


export class MixinDeviceBase implements DeviceState {
  constructor(mixinDevice: any, deviceState: any);
  mixinDevice: any;
{%- for field in classes['DeviceState'].fields %}
  {% if field.description -%}
  /**
   * {{ field.description }}
   */
  {% endif -%}  {{ field.name }}?: {{ mapType(field) }};
{%- endfor %}
}

declare const Scrypted: ScryptedStatic;

export default Scrypted;
