
# SDK: @scrypted/sdk

```javascript
const sdk = require('@scrypted/sdk');
```
> or

```javascript
import sdk from '@scrypted/sdk';
```

The Scrypted SDK can be installed off npm.

`npm install @scrypted/sdk --save`

## Overview

> Definition

```javascript
<%= partial "includes/scrypted/generated/sdk.erb" %>
```

> Examples

### sdk.scriptSettings

```javascript
const {scriptSettings} = sdk;
scriptSettings.putString('access_token', 'abcdefg');
```

Scripts can use the [scriptSettings](#settings) property as a user visible and configurable storage area.

### sdk.log

```javascript
const {log} = sdk;
log.i('Hello world.');
log.a('log.a will show up in the notification area!');
```

The [log](#logger) property writes logs and notification alerts which can be viewed in the web magement console.

### sdk.deviceManager

[DeviceManager](#devicemanager) fascilitates querying, control, and creation of devices. It also and sending events from existing devices.

<aside class="notice">
More information can be found in the <a href='#device-reference'>Device Reference</a>
</aside>

### sdk.mediaManager

The [media](#media-2) property manages creation and conversion of media types.

## Media

> Definition

```javascript
<%= partial "includes/scrypted/generated/sdk.media.erb" %>
```

> User Script Code

```javascript
// In a script that uses a speaker, send a text string to the speaker for playback.
const text = sdk.createMediaObject(Buffer.from('The front door is open'), 'text/plain');
speaker.load(text);
```

> Speaker Plugin Code

```javascript
// In a different plugin that implements the speaker, convert the text string to a
// publicly accessible audio/wav Uri.
// "media" is the "text" MediaObject from above.
var mediaUrl = await sdk.convertMediaObjectToUri(media, "audio/wav");
playUrl(mediaUrl);
```

MediaObjects are an interstial representation of any media that flows through the Scrypted platform. Devices generally
are not concerned about the source type of the media, but need the media to be converted into
a type is compatible with the device. For example, a user may want to send text to a speaker for playback.
The speaker is not aware of the source media type, and only needs it to be converted into an audio url.

### createMediaObject

Create a MediaObject of a given mime type from a Uri string or Buffer.

### convertMediaObjectToUri

Convert a MediaObject to a publicly accessible Uri of a given mime type.

### convertMediaObjectToBuffer

Convert a MediaObject to a Buffer of a given mime type.

