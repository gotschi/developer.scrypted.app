# Core Concepts

<aside class="notice">
Devices are a core object of a home automation platform, and have two main properties: Interfaces and Events.
</aside>

## Interfaces

```ecmascript
// Interfaces describe how the current state of a device, and can be used to modify that state.
if (light.on) {
    light.turnOff();
}
else {
    light.turnOn();
}
```

Interfaces are how devices expose their capabilities to Scrypted. An OnOff interface represents a binary switch. The Brightness
interface represents a light that can be dimmed. The ColorSettingRgb interface indicates the light can change color.
A device may expose multiple different interfaces to describe its functionality.

For example, given the following devices, the interfaces they would implement:

* Outlet: [OnOff](#onoff),
* Dimmer Switch: [OnOff](#onoff), [Brightness](#brightness),
* Color Bulb: [OnOff](#onoff), [Brightness](#brightness), [ColorSettingRgb](#colorsettingrgb)

Interfaces aren't only used represent characteristics of physical devices. As mentioned, they provide ways to hook into Scrypted.
The [HttpRequestHandler](#httprequesthandler) lets you add a web hook to handle incoming web requests. [EventListener](#eventlistener)
lets you create handlers that respond to events. [DeviceProvider](#deviceprovider) acts as a controller platform (like Hue or Lifx) for
exposing multiple other devices to Scrypted.

Interfaces also provide a way to query the device state. Such as checking whether an outlet is on or off, the current brightness level,
or the current color.

## Events

```transpilescript
// Events are triggered by the device on update, and can be observed.
light.listen('OnOff', (eventSource: ScryptedDevice, eventDetails: EventDetails, eventData: object) => {
  if (eventData) {
    log.i('The light was turned on.');
  }
  else {
    log.i('The light was turned off.');
  }
});
```

Scrypted maintains the state of all connected devices. Whenever the state of an interface is updated on a device, an Event
will be triggered for that particular interface.

For example, when a light turns on, the Light device would send an OnOff event. If a Slack message is received,
the Slack device would send a [MessagingEndpoint](#messagingendpoint)
event. Setting a schedule for sunrise on weekdays would send an [Alarm](#alarm) event on that schedule.

Automations subscribe to these events in your smart home setup and react accordingly.
