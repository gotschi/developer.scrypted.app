---
title: Scrypted API Reference

language_tabs: # must be one of https://git.io/vQNgJ
  - javascript
  - typescript

search: true
---
# Getting Started <br/>

## Creating An OnOff Device
```javascript
import axios from 'axios';

log.i('Hello World. This will create a virtual OnOff device.');

function Device() {
    this._isOn = false;
}

Device.prototype.isOn = function () {
    log.i('isOn was called!');
    return this._isOn;
};

Device.prototype.turnOff = function () {
    // set a breakpoint here.
    this._isOn = false;
    log.i('turnOff was called!');
};

Device.prototype.turnOn = async function () {
    // set a breakpoint here.
    log.i('turnOn was called!');

    // turnOn must return immediately, but it can trigger other things... 
    log.i('XMLHttpRequest is polyfilled by the Android host.');
    log.i('This allows the popular http library axios to work.');
    const ip = await axios.get('http://jsonip.com');
    log.i(`my ip: ${ip.data.ip}`);

    this._isOn = true;
};

export default = new Device();
```

1. Create a new Script under Plugins.
2. Set the type to Device.
3. Select/check the OnOff interface.
4. Save.
5. Click the Debug button.
6. Edit .vcode/settings.json and set the value of "scrypted.debugHost": "THIS.IS.MY.IP"
7. Launch Scrypted Debugger in VS Code.

# Types


## OnOff

<%= partial "includes/scrypted/OnOff.md.erb" %>

OnOff is a basic binary switch.



### isOn
boolean isOn()





### turnOff
void turnOff()





### turnOn
void turnOn()









## Brightness

<%= partial "includes/scrypted/Brightness.md.erb" %>

Brightness is a lighting device that can be dimmed/lit between 0 to 100.



### getLevel
int getLevel()





### setLevel
void setLevel(brightness: int)


Parameter | Type
--------- | ----
brightness | <a href='#int'>int</a>









## ColorSettingTemperature

<%= partial "includes/scrypted/ColorSettingTemperature.md.erb" %>





### getTemperature
int getTemperature()





### getTemperatureMaxK
int getTemperatureMaxK()





### getTemperatureMinK
int getTemperatureMinK()





### setTemperature
void setTemperature(kelvin: int)


Parameter | Type
--------- | ----
kelvin | <a href='#int'>int</a>









## ColorSettingRgb

<%= partial "includes/scrypted/ColorSettingRgb.md.erb" %>





### getRgb
ColorRgb getRgb()





### setRgb
void setRgb(r: int, g: int, b: int)


Parameter | Type
--------- | ----
r | <a href='#int'>int</a>
g | <a href='#int'>int</a>
b | <a href='#int'>int</a>









## ColorRgb

<%= partial "includes/scrypted/ColorRgb.md.erb" %>





### toString
String toString()







Name      | Type
--------- | ----
b | int
g | int
r | int




## ColorSettingHsv

<%= partial "includes/scrypted/ColorSettingHsv.md.erb" %>





### getHsv
ColorHsv getHsv()





### setHsv
void setHsv(hue: double, saturation: double, value: double)


Parameter | Type
--------- | ----
hue | <a href='#double'>double</a>
saturation | <a href='#double'>double</a>
value | <a href='#double'>double</a>









## ColorHsv

<%= partial "includes/scrypted/ColorHsv.md.erb" %>





### toString
String toString()







Name      | Type
--------- | ----
h | double
s | double
v | double




## BinarySensor

<%= partial "includes/scrypted/BinarySensor.md.erb" %>





### getBinaryState
boolean getBinaryState()









## EntrySensor

<%= partial "includes/scrypted/EntrySensor.md.erb" %>





### isEntryOpen
boolean isEntryOpen()









## EntryHandleSensor

<%= partial "includes/scrypted/EntryHandleSensor.md.erb" %>





### isDoorOpen
boolean isDoorOpen()









## IntrusionSensor

<%= partial "includes/scrypted/IntrusionSensor.md.erb" %>





### isIntrusionDetected
boolean isIntrusionDetected()









## FloodSensor

<%= partial "includes/scrypted/FloodSensor.md.erb" %>





### isFlooded
boolean isFlooded()









## Notifier

<%= partial "includes/scrypted/Notifier.md.erb" %>





### sendNotification
void sendNotification(title: String, body: String)


Parameter | Type
--------- | ----
title | <a href='#string'>String</a>
body | <a href='#string'>String</a>





### sendNotification
void sendNotification(title: String, body: String, media: MediaObject, mimeType: String)


Parameter | Type
--------- | ----
title | <a href='#string'>String</a>
body | <a href='#string'>String</a>
media | <a href='#mediaobject'>MediaObject</a>
mimeType | <a href='#string'>String</a>



If a the media parameter is supplied, the mime type denotes how to send the media within notification. For example, specify 'image/*' to send a video MediaObject as an image.
Passing null uses the native type of the MediaObject. If that is not supported by the notifier, the media will be converted to a compatible type.





## MediaObject

<%= partial "includes/scrypted/MediaObject.md.erb" %>





### getMimeType
String getMimeType()









## StartStop

<%= partial "includes/scrypted/StartStop.md.erb" %>





### isPausable
boolean isPausable()





### isPaused
boolean isPaused()





### isRunning
boolean isRunning()





### pause
void pause()





### resume
void resume()





### start
void start()





### stop
void stop()









## Dock

<%= partial "includes/scrypted/Dock.md.erb" %>





### dock
void dock()





### isDocked
boolean isDocked()









## Program

<%= partial "includes/scrypted/Program.md.erb" %>





### run
Object run(args: Object[])


Parameter | Type
--------- | ----
args | <a href='#object[]'>Object[]</a>



Synchronously run a script given the provided arguments.

### runAsync
Object runAsync(args: Object[])


Parameter | Type
--------- | ----
args | <a href='#object[]'>Object[]</a>



Asynchronously run a script given the provided arguments.





## TemperatureSetting

<%= partial "includes/scrypted/TemperatureSetting.md.erb" %>

TemperatureSetting represents a thermostat device.



### getAvailableThermostatModes
ThermostatMode[] getAvailableThermostatModes()





### getTemperatureSetpoint
double getTemperatureSetpoint()





### getTemperatureSetpointHigh
double getTemperatureSetpointHigh()





### getTemperatureSetpointLow
double getTemperatureSetpointLow()





### getThermostatMode
ThermostatMode getThermostatMode()





### setTemperatureSetRange
void setTemperatureSetRange(low: double, high: double)


Parameter | Type
--------- | ----
low | <a href='#double'>double</a>
high | <a href='#double'>double</a>





### setTemperatureSetpoint
void setTemperatureSetpoint(degrees: double)


Parameter | Type
--------- | ----
degrees | <a href='#double'>double</a>





### setThermostatMode
void setThermostatMode(mode: ThermostatMode)


Parameter | Type
--------- | ----
mode | <a href='#thermostatmode'>ThermostatMode</a>









## ThermostatMode

<%= partial "includes/scrypted/ThermostatMode.md.erb" %>








## Lock

<%= partial "includes/scrypted/Lock.md.erb" %>





### isLocked
boolean isLocked()





### lock
void lock()





### unlock
void unlock()









## PasswordControl

<%= partial "includes/scrypted/PasswordControl.md.erb" %>

PasswordControl represents devices that authorize users via a passcode or pin code.



### addPassword
void addPassword(password: String)


Parameter | Type
--------- | ----
password | <a href='#string'>String</a>





### getPasswords
Set getPasswords()





### removePassword
void removePassword(password: String)


Parameter | Type
--------- | ----
password | <a href='#string'>String</a>









## CameraStream

<%= partial "includes/scrypted/CameraStream.md.erb" %>





### createVideoCapturer
Future createVideoCapturer()









## Thermometer

<%= partial "includes/scrypted/Thermometer.md.erb" %>





### getTemperatureAmbient
double getTemperatureAmbient()



Get the ambient temperature in Celsius.

### getTemperatureUnit
TemperatureUnit getTemperatureUnit()



Get the user facing unit of measurement for this thermometer. This may be Fahrenheit, but getTemperatureAmbient will return results in Celsius.





## TemperatureUnit

<%= partial "includes/scrypted/TemperatureUnit.md.erb" %>








## HumiditySensor

<%= partial "includes/scrypted/HumiditySensor.md.erb" %>





### getHumidityAmbient
double getHumidityAmbient()









## UltravioletSensor

<%= partial "includes/scrypted/UltravioletSensor.md.erb" %>





### getUltraviolet
double getUltraviolet()









## LuminanceSensor

<%= partial "includes/scrypted/LuminanceSensor.md.erb" %>





### getLuminance
double getLuminance()









## Scene

<%= partial "includes/scrypted/Scene.md.erb" %>

Scenes control multiple different devices into a given state.



### activate
void activate()





### deactivate
void deactivate()





### isReversible
boolean isReversible()



If a scene can be reversed, isReversible should return true. Otherwise deactivate will not be called.





## Entry

<%= partial "includes/scrypted/Entry.md.erb" %>





### closeEntry
void closeEntry()





### isEntryOpen
boolean isEntryOpen()





### openEntry
void openEntry()









## Alarm

<%= partial "includes/scrypted/Alarm.md.erb" %>

Event data from the Scheduler component.



### getClockType
ClockType getClockType()





### getHour
int getHour()





### getMinute
int getMinute()





### isEnabled
boolean isEnabled(day: int)


Parameter | Type
--------- | ----
day | <a href='#int'>int</a>









## ClockType

<%= partial "includes/scrypted/ClockType.md.erb" %>








## Battery

<%= partial "includes/scrypted/Battery.md.erb" %>





### getBatteryLevel
int getBatteryLevel()









## Refresh

<%= partial "includes/scrypted/Refresh.md.erb" %>

Refresh indicates that this device has properties that are not automatically updated, and must be periodically refreshed.



### getRefreshFrequency
int getRefreshFrequency()



Get the recommended refresh/poll frequency in seconds for this device.

### refresh
void refresh(refreshInterface: Class, userInitiated: boolean)


Parameter | Type
--------- | ----
refreshInterface | <a href='#class'>Class</a>
userInitiated | <a href='#boolean'>boolean</a>



This method is called by Scrypted when the properties of the device need to be refreshed. When the device has completed the refresh, the appropriate events should be emitted. The parameters provide the specific interface that needs to be refreshed and whether it was user initiated (via UI or voice).





## MediaPlayer

<%= partial "includes/scrypted/MediaPlayer.md.erb" %>





### load
void load(media: MediaObject, options: MediaPlayerOptions)


Parameter | Type
--------- | ----
media | <a href='#mediaobject'>MediaObject</a>
options | <a href='#mediaplayeroptions'>MediaPlayerOptions</a>





### load
void load(mediaUrl: String, options: MediaPlayerOptions)


Parameter | Type
--------- | ----
mediaUrl | <a href='#string'>String</a>
options | <a href='#mediaplayeroptions'>MediaPlayerOptions</a>





### pause
void pause()





### play
void play()





### stop
void stop()









## MediaPlayerOptions

<%= partial "includes/scrypted/MediaPlayerOptions.md.erb" %>






Name      | Type
--------- | ----
autoplay | boolean
mimeType | String




## FaceDetector

<%= partial "includes/scrypted/FaceDetector.md.erb" %>








## Online

<%= partial "includes/scrypted/Online.md.erb" %>

Online denotes whether the device is online or unresponsive. It may be unresponsive due to being unplugged, network error, etc.



### isOnline
boolean isOnline()









## EventListener

<%= partial "includes/scrypted/EventListener.md.erb" %>





### onEvent
void onEvent(eventSource: ScryptedInterface, eventInterface: Class, eventData: Object)


Parameter | Type
--------- | ----
eventSource | <a href='#scryptedinterface'>ScryptedInterface</a>
eventInterface | <a href='#class'>Class</a>
eventData | <a href='#object'>Object</a>



This device type can be registered to listen for events. The event source, event type (interface), and event data are all passed to the listener as arguments.





## EventListenerRegister

<%= partial "includes/scrypted/EventListenerRegister.md.erb" %>





### getListener
EventListener getListener()





### removeListener
void removeListener()









## Logger

<%= partial "includes/scrypted/Logger.md.erb" %>





### a
void a(msg: String)


Parameter | Type
--------- | ----
msg | <a href='#string'>String</a>



Alert. Alert level logs will be displayed as a notification in the management console.

### clear
void clear()



Clear the log

### clearAlert
void clearAlert(msg: String)


Parameter | Type
--------- | ----
msg | <a href='#string'>String</a>



Clear a specific alert

### clearAlerts
void clearAlerts()



Clear all alerts

### d
void d(msg: String)


Parameter | Type
--------- | ----
msg | <a href='#string'>String</a>



Debug

### e
void e(msg: String)


Parameter | Type
--------- | ----
msg | <a href='#string'>String</a>



Error

### i
void i(msg: String)


Parameter | Type
--------- | ----
msg | <a href='#string'>String</a>



Info

### v
void v(msg: String)


Parameter | Type
--------- | ----
msg | <a href='#string'>String</a>



Verbose

### w
void w(msg: String)


Parameter | Type
--------- | ----
msg | <a href='#string'>String</a>



Warn





## MediaSource

<%= partial "includes/scrypted/MediaSource.md.erb" %>





### getMedia
MediaObject getMedia()



Get a MediaObject that will be automatically converted for playback on other devices.





## MessagingEndpoint

<%= partial "includes/scrypted/MessagingEndpoint.md.erb" %>








## Settings

<%= partial "includes/scrypted/Settings.md.erb" %>

Settings viewing and editing of device configurations that describe or modify behavior.



### getBoolean
Boolean getBoolean(key: String)


Parameter | Type
--------- | ----
key | <a href='#string'>String</a>





### getBoolean
Boolean getBoolean(key: String, defaultValue: Boolean)


Parameter | Type
--------- | ----
key | <a href='#string'>String</a>
defaultValue | <a href='#boolean'>Boolean</a>





### getConfigurationValueList
List getConfigurationValueList(key: String)


Parameter | Type
--------- | ----
key | <a href='#string'>String</a>





### getDouble
Double getDouble(key: String)


Parameter | Type
--------- | ----
key | <a href='#string'>String</a>





### getFloat
Float getFloat(key: String)


Parameter | Type
--------- | ----
key | <a href='#string'>String</a>





### getInt
Integer getInt(key: String)


Parameter | Type
--------- | ----
key | <a href='#string'>String</a>





### getKeyDescription
String getKeyDescription(key: String)


Parameter | Type
--------- | ----
key | <a href='#string'>String</a>





### getKeys
List getKeys()





### getString
String getString(key: String)


Parameter | Type
--------- | ----
key | <a href='#string'>String</a>





### putBoolean
void putBoolean(key: String, value: boolean)


Parameter | Type
--------- | ----
key | <a href='#string'>String</a>
value | <a href='#boolean'>boolean</a>





### putDouble
void putDouble(key: String, value: double)


Parameter | Type
--------- | ----
key | <a href='#string'>String</a>
value | <a href='#double'>double</a>





### putFloat
void putFloat(key: String, value: float)


Parameter | Type
--------- | ----
key | <a href='#string'>String</a>
value | <a href='#float'>float</a>





### putInt
void putInt(key: String, value: int)


Parameter | Type
--------- | ----
key | <a href='#string'>String</a>
value | <a href='#int'>int</a>





### putString
void putString(key: String, value: String)


Parameter | Type
--------- | ----
key | <a href='#string'>String</a>
value | <a href='#string'>String</a>









## OauthClient

<%= partial "includes/scrypted/OauthClient.md.erb" %>

The OauthClient can be implemented to perform the browser based Oauth process from within a plugin.



### getOauthUrl
String getOauthUrl()



Get the Oauth URL to navigate to in the browser. The redirect_uri parameter is not needed and will be automatically set by Scrypted.

### onOauthCallback
void onOauthCallback(callbackUrl: String)


Parameter | Type
--------- | ----
callbackUrl | <a href='#string'>String</a>



When an oauth request by a plugin completes, the callback url, with the code/token, will be passed to this method.





## DeviceManager

<%= partial "includes/scrypted/DeviceManager.md.erb" %>





### getDeviceById
ScryptedInterface getDeviceById(id: long)


Parameter | Type
--------- | ----
id | <a href='#long'>long</a>





### getDeviceByName
ScryptedInterface getDeviceByName(name: String)


Parameter | Type
--------- | ----
name | <a href='#string'>String</a>





### onDeviceDiscovered
void onDeviceDiscovered(device: JavaScriptObject)


Parameter | Type
--------- | ----
device | <a href='#javascriptobject'>JavaScriptObject</a>





### onDeviceEvent
void onDeviceEvent(eventInterface: Class, eventData: Object)


Parameter | Type
--------- | ----
eventInterface | <a href='#class'>Class</a>
eventData | <a href='#object'>Object</a>





### onDeviceEvent
void onDeviceEvent(id: String, eventInterface: Class, eventData: Object)


Parameter | Type
--------- | ----
id | <a href='#string'>String</a>
eventInterface | <a href='#class'>Class</a>
eventData | <a href='#object'>Object</a>





### onDevicesChanged
void onDevicesChanged(devices: JavaScriptObject)


Parameter | Type
--------- | ----
devices | <a href='#javascriptobject'>JavaScriptObject</a>









## DeviceProvider

<%= partial "includes/scrypted/DeviceProvider.md.erb" %>

DeviceProvider acts as a controller/hub and exposes multiple devices to Scrypted Device Manager.



### discoverDevices
void discoverDevices(duration: long)


Parameter | Type
--------- | ----
duration | <a href='#long'>long</a>



Initiate device discovery for the specified duration.

### getDevice
Object getDevice(id: String)


Parameter | Type
--------- | ----
id | <a href='#string'>String</a>



Get an instance of a previously discovered device that was reported to the device manager.





## HttpRequestHandler

<%= partial "includes/scrypted/HttpRequestHandler.md.erb" %>

The HttpRequestHandler allows handling of web requests under the endpoint path: /endpoint/<endpoint>/*.



### getEndpoint
String getEndpoint()



Get the preferred endpoint of this HttpRequestHandler. Local/development scripts can set this to any value. This is ignored if the plugin is installed via npm: the endpoint will always be the npm package name.

### onRequest
void onRequest(request: HttpRequest, response: HttpResponse)


Parameter | Type
--------- | ----
request | <a href='#httprequest'>HttpRequest</a>
response | <a href='#httpresponse'>HttpResponse</a>



Callback to handle an incoming request.





## HttpRequest

<%= partial "includes/scrypted/HttpRequest.md.erb" %>






Name      | Type
--------- | ----
body | String
headers | Map
method | String
rootPath | String
url | String




## HttpResponse

<%= partial "includes/scrypted/HttpResponse.md.erb" %>

Response object provided by the HttpRequestHandler.



### send
void send(options: HttpResponseOptions, body: String)


Parameter | Type
--------- | ----
options | <a href='#httpresponseoptions'>HttpResponseOptions</a>
body | <a href='#string'>String</a>





### send
void send(options: HttpResponseOptions, body: ByteBuffer)


Parameter | Type
--------- | ----
options | <a href='#httpresponseoptions'>HttpResponseOptions</a>
body | <a href='#bytebuffer'>ByteBuffer</a>





### send
void send(body: String)


Parameter | Type
--------- | ----
body | <a href='#string'>String</a>





### send
void send(body: ByteBuffer)


Parameter | Type
--------- | ----
body | <a href='#bytebuffer'>ByteBuffer</a>









## HttpResponseOptions

<%= partial "includes/scrypted/HttpResponseOptions.md.erb" %>






Name      | Type
--------- | ----
asContent | boolean
code | int
headers | Map




## EventEmitter

<%= partial "includes/scrypted/EventEmitter.md.erb" %>





### on
EventListenerRegister on(event: String, callback: JavaScriptObject)


Parameter | Type
--------- | ----
event | <a href='#string'>String</a>
callback | <a href='#javascriptobject'>JavaScriptObject</a>



Subscribe to events from a specific interface on a device, such as 'OnOff' or 'Brightness'.
The callback function has the signature function(eventSource, eventData).
The eventSource is the interface from where the event originated, and eventData will contain data specific
to that type of interface. OnOff would be boolean, while Brightness would be an integer between 0 and 100.

### watch
EventListenerRegister watch(event: String, callback: JavaScriptObject)


Parameter | Type
--------- | ----
event | <a href='#string'>String</a>
callback | <a href='#javascriptobject'>JavaScriptObject</a>



Similar to 'on', but will passively watch for events, and not initiate polling.





